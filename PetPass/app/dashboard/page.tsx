'use client'

import { useSession } from 'next-auth/react'
import { useEffect, useState } from 'react'
import Link from 'next/link'
import { Button } from '@/components/ui/Button'

interface PetPass {
  id: string
  autoGeneratedCode: string
  petName: string
  species: string
  breed?: string
  createdAt: string
  metalTag?: {
    id: string
    status: string
  }
}

interface Subscription {
  id: string
  status: string
  planType: string
  currentPeriodStart?: string
  currentPeriodEnd?: string
}

export default function DashboardPage() {
  const { data: session, status } = useSession()
  const [petPasses, setPetPasses] = useState<PetPass[]>([])
  const [subscription, setSubscription] = useState<Subscription | null>(null)
  const [loading, setLoading] = useState(true)

  useEffect(() => {
    if (session) {
      fetchData()
    }
  }, [session])

  const fetchData = async () => {
    try {
      // Fetch PetPasses
      const petPassResponse = await fetch('/api/petpass')
      if (petPassResponse.ok) {
        const petPassData = await petPassResponse.json()
        setPetPasses(petPassData.petpasses)
      }

      // Fetch Subscription info
      const subscriptionResponse = await fetch('/api/subscription')
      if (subscriptionResponse.ok) {
        const subscriptionData = await subscriptionResponse.json()
        setSubscription(subscriptionData.subscription)
      }
    } catch (error) {
      console.error('Error fetching data:', error)
    } finally {
      setLoading(false)
    }
  }

  const getPlanDisplayName = (planType: string) => {
    switch (planType) {
      case 'free':
        return 'Piano Free'
      case 'pro':
        return 'Piano Pro'
      case 'business':
        return 'Piano Business'
      default:
        return 'Piano Free'
    }
  }

  const getPlanLimits = (planType: string) => {
    switch (planType) {
      case 'free':
        return { petPasses: 1, description: 'Puoi creare fino a 1 PetPass gratuito' }
      case 'pro':
        return { petPasses: 5, description: 'Fino a 5 PetPass con tag metallici inclusi' }
      case 'business':
        return { petPasses: -1, description: 'PetPass illimitati con tutte le funzionalit√†' }
      default:
        return { petPasses: 1, description: 'Puoi creare fino a 1 PetPass gratuito' }
    }
  }

  if (status === 'loading') {
    return (
      <div className="min-h-screen bg-gray-50 flex items-center justify-center">
        <div className="text-center">
          <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto"></div>
          <p className="mt-4 text-gray-600">Caricamento...</p>
        </div>
      </div>
    )
  }

  if (!session) {
    return (
      <div className="min-h-screen bg-gray-50 flex items-center justify-center">
        <div className="text-center">
          <h1 className="text-2xl font-bold text-gray-900 mb-4">Accesso richiesto</h1>
          <p className="text-gray-600 mb-6">Devi essere autenticato per accedere alla dashboard.</p>
          <Link href="/login">
            <Button>Accedi</Button>
          </Link>
        </div>
      </div>
    )
  }

  const currentPlan = subscription?.planType || 'free'
  const planLimits = getPlanLimits(currentPlan)
  const canCreateMore = planLimits.petPasses === -1 || petPasses.length < planLimits.petPasses

  return (
    <div className="min-h-screen bg-gray-50">
      <div className="container mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <div className="mb-8">
          <h1 className="text-3xl font-bold text-gray-900">La tua Dashboard</h1>
          <p className="mt-2 text-gray-600">
            Benvenuto, {session.user?.email}! Gestisci i tuoi PetPass qui.
          </p>
        </div>

        {/* Subscription Status Banner */}
        {subscription && subscription.status === 'active' && (
          <div className="mb-6 bg-green-50 border border-green-200 rounded-lg p-4">
            <div className="flex items-center">
              <div className="flex-shrink-0">
                <svg className="h-5 w-5 text-green-400" viewBox="0 0 20 20" fill="currentColor">
                  <path fillRule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clipRule="evenodd" />
                </svg>
              </div>
              <div className="ml-3">
                <p className="text-sm font-medium text-green-800">
                  {getPlanDisplayName(currentPlan)} attivo fino al{' '}
                  {subscription.currentPeriodEnd && 
                    new Date(subscription.currentPeriodEnd).toLocaleDateString('it-IT')
                  }
                </p>
              </div>
            </div>
          </div>
        )}

        <div className="mb-6">
          {canCreateMore ? (
            <Link href="/create-petpass">
              <Button size="lg">
                ‚ú® Crea un nuovo PetPass
              </Button>
            </Link>
          ) : (
            <div className="bg-yellow-50 border border-yellow-200 rounded-lg p-4 mb-4">
              <div className="flex items-center justify-between">
                <div className="flex items-center">
                  <svg className="h-5 w-5 text-yellow-400 mr-2" viewBox="0 0 20 20" fill="currentColor">
                    <path fillRule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clipRule="evenodd" />
                  </svg>
                  <p className="text-sm font-medium text-yellow-800">
                    Hai raggiunto il limite di {planLimits.petPasses} PetPass per il piano {getPlanDisplayName(currentPlan)}
                  </p>
                </div>
                <Link href="/pricing">
                  <Button size="sm">
                    Aggiorna Piano
                  </Button>
                </Link>
              </div>
            </div>
          )}
        </div>

        {loading ? (
          <div className="text-center py-8">
            <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto"></div>
            <p className="mt-4 text-gray-600">Caricamento PetPass...</p>
          </div>
        ) : petPasses.length === 0 ? (
          <div className="bg-white rounded-lg shadow p-8 text-center">
            <div className="w-16 h-16 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-4">
              <span className="text-2xl">üêæ</span>
            </div>
            <h3 className="text-lg font-medium text-gray-900 mb-2">
              Nessun PetPass creato
            </h3>
            <p className="text-gray-600 mb-6">
              Crea il primo PetPass per il tuo amico a quattro zampe!
            </p>
            {canCreateMore ? (
              <Link href="/create-petpass">
                <Button>Crea il primo PetPass</Button>
              </Link>
            ) : (
              <Link href="/pricing">
                <Button>Aggiorna Piano</Button>
              </Link>
            )}
          </div>
        ) : (
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            {petPasses.map((petPass) => (
              <div key={petPass.id} className="bg-white rounded-lg shadow-md p-6">
                <div className="flex items-center justify-between mb-4">
                  <h3 className="text-lg font-semibold text-gray-900">
                    {petPass.petName}
                  </h3>
                  <span className="text-sm text-gray-500">
                    {petPass.species}
                  </span>
                </div>
                
                <div className="space-y-2 mb-4">
                  <p className="text-sm text-gray-600">
                    <strong>Codice:</strong> {petPass.autoGeneratedCode}
                  </p>
                  {petPass.breed && (
                    <p className="text-sm text-gray-600">
                      <strong>Razza:</strong> {petPass.breed}
                    </p>
                  )}
                  <p className="text-sm text-gray-600">
                    <strong>Creato:</strong> {new Date(petPass.createdAt).toLocaleDateString('it-IT')}
                  </p>
                </div>

                <div className="flex flex-col space-y-2">
                  <Link href={`/petpass/${petPass.autoGeneratedCode}`}>
                    <Button variant="secondary" className="w-full" size="sm">
                      Visualizza PetPass
                    </Button>
                  </Link>
                  <Link href={`/edit-petpass/${petPass.autoGeneratedCode}`}>
                    <Button variant="ghost" className="w-full" size="sm">
                      Modifica
                    </Button>
                  </Link>
                  {!petPass.metalTag && currentPlan === 'free' && (
                    <Button variant="primary" className="w-full" size="sm">
                      Ordina Tag Metallico (‚Ç¨19.99)
                    </Button>
                  )}
                  {!petPass.metalTag && currentPlan !== 'free' && (
                    <Button variant="primary" className="w-full" size="sm">
                      Ordina Tag Metallico (Incluso)
                    </Button>
                  )}
                  {petPass.metalTag && (
                    <div className="text-sm text-center py-2 bg-green-50 rounded border">
                      Tag Metallico: {petPass.metalTag.status}
                    </div>
                  )}
                </div>
              </div>
            ))}
          </div>
        )}

        {/* Subscription Info */}
        <div className="mt-12 bg-white rounded-lg shadow p-6">
          <h2 className="text-xl font-semibold text-gray-900 mb-4">
            Il tuo Piano
          </h2>
          <div className="flex items-center justify-between">
            <div>
              <p className="text-gray-900 font-medium">{getPlanDisplayName(currentPlan)}</p>
              <p className="text-sm text-gray-500 mt-1">
                {planLimits.description}
              </p>
              <p className="text-sm text-gray-500 mt-1">
                PetPass utilizzati: {petPasses.length}
                {planLimits.petPasses !== -1 && ` / ${planLimits.petPasses}`}
              </p>
              {subscription?.currentPeriodEnd && subscription.status === 'active' && (
                <p className="text-sm text-gray-500 mt-1">
                  Rinnovo: {new Date(subscription.currentPeriodEnd).toLocaleDateString('it-IT')}
                </p>
              )}
            </div>
            <Link href="/pricing">
              <Button variant="primary">
                {currentPlan === 'free' ? 'Aggiorna Piano' : 'Gestisci Piano'}
              </Button>
            </Link>
          </div>
        </div>
      </div>
    </div>
  )
} 